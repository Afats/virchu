{
  "stats": {
    "suites": 7,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-22T15:36:24.485Z",
    "end": "2021-03-22T15:37:08.371Z",
    "duration": 43886,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "42a01479-db26-46f2-8c4a-9bf215ef77b8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "845effa5-d4b9-496d-b6cb-e59de3853dda",
          "title": "registration testing: ",
          "fullFile": "/Users/moose/github/SENG3011_Cracked-Pepper/Phase_1/TestScripts/mochaTests/test.js",
          "file": "/Phase_1/TestScripts/mochaTests/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valid registration",
              "fullTitle": "registration testing:  valid registration",
              "timedOut": false,
              "duration": 2071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('auth/register')\n    .send({'name': 'moose', 'email': 'moose@gmail.com', 'password': 'leomessi'})\n    .end((err, res) => {\n        expect(res.body).to.have.property('auth', true);\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "0b1e2cd1-2fda-4168-8206-26de88214429",
              "parentUUID": "845effa5-d4b9-496d-b6cb-e59de3853dda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " invalid registration (without password)",
              "fullTitle": "registration testing:   invalid registration (without password)",
              "timedOut": false,
              "duration": 1731,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .post('auth/register')\n    .send({'name': 'moose', 'email': 'moose@gmail.com'})\n    .end((err, res) => {\n        expect(res).to.have.status(500);\n        done();\n    });",
              "err": {},
              "uuid": "2ce13d6b-1bb2-41bf-a6d8-9a787aa317ac",
              "parentUUID": "845effa5-d4b9-496d-b6cb-e59de3853dda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b1e2cd1-2fda-4168-8206-26de88214429",
            "2ce13d6b-1bb2-41bf-a6d8-9a787aa317ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "adc4b444-498d-4ef3-8213-8c3ca9a4c9a5",
          "title": "login testing: ",
          "fullFile": "/Users/moose/github/SENG3011_Cracked-Pepper/Phase_1/TestScripts/mochaTests/test.js",
          "file": "/Phase_1/TestScripts/mochaTests/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valid, authorized login",
              "fullTitle": "login testing:  valid, authorized login",
              "timedOut": false,
              "duration": 2146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('auth/login')\n    .send({'email': 'moose@gmail.com', 'password': 'leomessi'})\n    .end((err, res) => {\n        expect(res.body).to.have.property('auth', true);\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "bf53e6f9-f041-4b4d-83fe-d5ae6f500ba5",
              "parentUUID": "adc4b444-498d-4ef3-8213-8c3ca9a4c9a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid password, unauthorized login",
              "fullTitle": "login testing:  invalid password, unauthorized login",
              "timedOut": false,
              "duration": 2019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .post('auth/login')\n    .send({'email': 'moose@gmail.com', 'password': 'leomess'})\n    .end((err, res) => {\n        expect(res.body).to.have.property('auth', false);\n        expect(res.body).to.have.property('token', null);\n        expect(res).to.have.status(401);\n        done();\n    });",
              "err": {},
              "uuid": "a81863fd-7acc-4b7a-b00f-7702c5f94df9",
              "parentUUID": "adc4b444-498d-4ef3-8213-8c3ca9a4c9a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf53e6f9-f041-4b4d-83fe-d5ae6f500ba5",
            "a81863fd-7acc-4b7a-b00f-7702c5f94df9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4165,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "1643b96f-8103-4c09-9f30-b7a0547ab7e9",
          "title": "auth testing: ",
          "fullFile": "/Users/moose/github/SENG3011_Cracked-Pepper/Phase_1/TestScripts/mochaTests/test.js",
          "file": "/Phase_1/TestScripts/mochaTests/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "get user id from valid token",
              "fullTitle": "auth testing:  get user id from valid token",
              "timedOut": false,
              "duration": 1971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('auth/me')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('name', 'moose');\n        expect(res.body).to.have.property('email', 'moose@gmail.com');\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "0302e03f-ec22-43f4-b164-821df9a15b40",
              "parentUUID": "1643b96f-8103-4c09-9f30-b7a0547ab7e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get user id from invalid token",
              "fullTitle": "auth testing:  get user id from invalid token",
              "timedOut": false,
              "duration": 1668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('auth/me')\n    .set('x-access-token', token+\"llll\")\n    .end((err, res) => {\n        expect(res.body).to.have.property('auth', false);\n        expect(res.body).to.have.property('message', \"Failed to authenticate token.\");\n        expect(res).to.have.status(500);\n        done();\n    });",
              "err": {},
              "uuid": "20d339e1-1ba8-46cc-bbf3-41741935f270",
              "parentUUID": "1643b96f-8103-4c09-9f30-b7a0547ab7e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0302e03f-ec22-43f4-b164-821df9a15b40",
            "20d339e1-1ba8-46cc-bbf3-41741935f270"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3639,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "f93bfff4-1c6d-469d-ad2f-d9b38092d2ae",
          "title": "basic GET testing: ",
          "fullFile": "/Users/moose/github/SENG3011_Cracked-Pepper/Phase_1/TestScripts/mochaTests/test.js",
          "file": "/Phase_1/TestScripts/mochaTests/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "base url with empty parameters",
              "fullTitle": "basic GET testing:  base url with empty parameters",
              "timedOut": false,
              "duration": 1807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/')\n    .end((err, res) => {\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "b03487e0-c5d5-45e7-9a10-270501d4bada",
              "parentUUID": "f93bfff4-1c6d-469d-ad2f-d9b38092d2ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b03487e0-c5d5-45e7-9a10-270501d4bada"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1807,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "1ae44cac-19be-4027-b5a1-6dd6f807cc24",
          "title": "location testing: ",
          "fullFile": "/Users/moose/github/SENG3011_Cracked-Pepper/Phase_1/TestScripts/mochaTests/test.js",
          "file": "/Phase_1/TestScripts/mochaTests/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "location without token (forbidden)",
              "fullTitle": "location testing:  location without token (forbidden)",
              "timedOut": false,
              "duration": 1699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('disease/?location=China')\n    .end((err, res) => {\n        expect(res.body).to.have.property('auth', false);\n        expect(res.body).to.have.property('message', message_403);\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "f8c2889b-fa89-43eb-b40c-7886c73e59b5",
              "parentUUID": "1ae44cac-19be-4027-b5a1-6dd6f807cc24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "location with valid token",
              "fullTitle": "location testing:  location with valid token",
              "timedOut": false,
              "duration": 1987,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?location=China')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', 'success');\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "a9907e7d-8060-4cf0-825e-03921d08f628",
              "parentUUID": "1ae44cac-19be-4027-b5a1-6dd6f807cc24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid location with valid token",
              "fullTitle": "location testing:  invalid location with valid token",
              "timedOut": false,
              "duration": 1943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?location=Balaalala')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body.status).to.equal(status_404);\n        expect(res.body.message).to.equal(message_404);\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "34e39572-2fc4-4815-ad2d-b0c598159265",
              "parentUUID": "1ae44cac-19be-4027-b5a1-6dd6f807cc24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "location with invalid search",
              "fullTitle": "location testing:  location with invalid search",
              "timedOut": false,
              "duration": 2046,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?location=Balaalala')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body.status).to.equal(status_404);\n        expect(res.body.message).to.equal(message_404);\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "1cf2c669-f0fa-4f1c-b706-ce01eaaedb45",
              "parentUUID": "1ae44cac-19be-4027-b5a1-6dd6f807cc24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid location query",
              "fullTitle": "location testing:  invalid location query",
              "timedOut": false,
              "duration": 2048,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?locccc')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "2b488635-6225-4212-a1f7-23aa1712e554",
              "parentUUID": "1ae44cac-19be-4027-b5a1-6dd6f807cc24",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8c2889b-fa89-43eb-b40c-7886c73e59b5",
            "a9907e7d-8060-4cf0-825e-03921d08f628",
            "34e39572-2fc4-4815-ad2d-b0c598159265",
            "1cf2c669-f0fa-4f1c-b706-ce01eaaedb45",
            "2b488635-6225-4212-a1f7-23aa1712e554"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9723,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "bca63bb9-6b96-4d61-bea1-da8212aba972",
          "title": "disease-name testing: ",
          "fullFile": "/Users/moose/github/SENG3011_Cracked-Pepper/Phase_1/TestScripts/mochaTests/test.js",
          "file": "/Phase_1/TestScripts/mochaTests/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "disease without token (forbidden)",
              "fullTitle": "disease-name testing:  disease without token (forbidden)",
              "timedOut": false,
              "duration": 1840,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('disease/?disease=yes')\n    .end((err, res) => {\n        expect(res.body).to.have.property('auth', false);\n        expect(res.body).to.have.property('message', message_403);\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "c68e6e79-a04e-4b2b-9e41-452fd3c960d3",
              "parentUUID": "bca63bb9-6b96-4d61-bea1-da8212aba972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "disease with valid token",
              "fullTitle": "disease-name testing:  disease with valid token",
              "timedOut": false,
              "duration": 1924,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?disease=yes')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', 'success');\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "f23d0b58-13b4-4d1a-83a3-bd963b385a3f",
              "parentUUID": "bca63bb9-6b96-4d61-bea1-da8212aba972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "disease with invalid search",
              "fullTitle": "disease-name testing:  disease with invalid search",
              "timedOut": false,
              "duration": 1965,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?disease=ligma')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body.status).to.equal(status_404);\n        expect(res.body.message).to.equal(message_404);\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "038757df-8a31-4254-8bd1-ba1fdc44a760",
              "parentUUID": "bca63bb9-6b96-4d61-bea1-da8212aba972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "multiple diseases in search, with one invalid",
              "fullTitle": "disease-name testing:  multiple diseases in search, with one invalid",
              "timedOut": false,
              "duration": 1945,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?disease=yes&disease=nooo')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body.status).to.equal(status_404);\n        expect(res.body.message).to.equal(message_404);\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "fc59fec5-6f58-4f24-8590-be52ddc5153a",
              "parentUUID": "bca63bb9-6b96-4d61-bea1-da8212aba972",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c68e6e79-a04e-4b2b-9e41-452fd3c960d3",
            "f23d0b58-13b4-4d1a-83a3-bd963b385a3f",
            "038757df-8a31-4254-8bd1-ba1fdc44a760",
            "fc59fec5-6f58-4f24-8590-be52ddc5153a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "b239a570-67e1-40ce-8d78-9c559f048312",
          "title": "time testing: ",
          "fullFile": "/Users/moose/github/SENG3011_Cracked-Pepper/Phase_1/TestScripts/mochaTests/test.js",
          "file": "/Phase_1/TestScripts/mochaTests/test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "time without token (forbidden)",
              "fullTitle": "time testing:  time without token (forbidden)",
              "timedOut": false,
              "duration": 1841,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('disease/?startDate=2020-01-17 11:12:12&endDate=2020-01-17 11:12:12')\n    .end((err, res) => {\n        expect(res.body).to.have.property('auth', false);\n        expect(res.body).to.have.property('message', message_403);\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "cb587b3e-b69f-4090-b901-b1982a3c6d0e",
              "parentUUID": "b239a570-67e1-40ce-8d78-9c559f048312",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "time with valid token",
              "fullTitle": "time testing:  time with valid token",
              "timedOut": false,
              "duration": 1947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get('disease/?startDate=2020-01-17 11:12:12&endDate=2020-01-17 11:12:12')\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', 'success');\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "fb06a62e-6fa6-4c57-a6ce-4acff217d0d1",
              "parentUUID": "b239a570-67e1-40ce-8d78-9c559f048312",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "start time greater than end time",
              "fullTitle": "time testing:  start time greater than end time",
              "timedOut": false,
              "duration": 1837,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get(\"disease/?startDate=2020-01-17 11:12:12&endDate=2019-01-17 11:12:12\")\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', 'failure');\n        expect(res.body).to.have.property('message', message_badtime1);\n        expect(res).to.have.status(400);\n        done();\n    });",
              "err": {},
              "uuid": "8edc3bf4-b1ef-408f-a5f6-8d3f7766fcc6",
              "parentUUID": "b239a570-67e1-40ce-8d78-9c559f048312",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty end time",
              "fullTitle": "time testing:  empty end time",
              "timedOut": false,
              "duration": 1780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get(\"disease/?startDate=2019-01-17 11:12:12&endDate=\")\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', 'failure');\n        expect(res.body).to.have.property('message', message_badtime2);\n        expect(res).to.have.status(400);\n        done();\n    });",
              "err": {},
              "uuid": "245667a3-c10a-49f9-9b32-5d8f676682e6",
              "parentUUID": "b239a570-67e1-40ce-8d78-9c559f048312",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty start time",
              "fullTitle": "time testing:  empty start time",
              "timedOut": false,
              "duration": 1905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get(\"disease/?startDate=&endDate=2019-01-17 11:12:12\")\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', 'failure');\n        expect(res.body).to.have.property('message', message_badtime2);\n        expect(res).to.have.status(400);\n        done();\n    });",
              "err": {},
              "uuid": "09299191-7aeb-41ef-a3ad-e37fa5bdcf9c",
              "parentUUID": "b239a570-67e1-40ce-8d78-9c559f048312",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "both parameters empty",
              "fullTitle": "time testing:  both parameters empty",
              "timedOut": false,
              "duration": 1740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get(\"disease/?startDate=&endDate=\")\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', 'failure');\n        expect(res.body).to.have.property('message', message_badtime2);\n        expect(res).to.have.status(400);\n        done();\n    });",
              "err": {},
              "uuid": "30723855-850a-43f2-b0cf-d8f92d6711ce",
              "parentUUID": "b239a570-67e1-40ce-8d78-9c559f048312",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "invalid times",
              "fullTitle": "time testing:  invalid times",
              "timedOut": false,
              "duration": 1983,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(5000);\nchai.request(url)\n    .get(\"disease/?startDate=1972-01-17 11:12:12&endDate=1972-01-17 11:12:12\")\n    .set('x-access-token', token)\n    .end((err, res) => {\n        expect(res.body).to.have.property('status', status_404);\n        expect(res.body).to.have.property('message', message_404);\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "fc1a5b31-2274-427e-8fa7-c18957cdb46b",
              "parentUUID": "b239a570-67e1-40ce-8d78-9c559f048312",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb587b3e-b69f-4090-b901-b1982a3c6d0e",
            "fb06a62e-6fa6-4c57-a6ce-4acff217d0d1",
            "8edc3bf4-b1ef-408f-a5f6-8d3f7766fcc6",
            "245667a3-c10a-49f9-9b32-5d8f676682e6",
            "09299191-7aeb-41ef-a3ad-e37fa5bdcf9c",
            "30723855-850a-43f2-b0cf-d8f92d6711ce",
            "fc1a5b31-2274-427e-8fa7-c18957cdb46b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13033,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}